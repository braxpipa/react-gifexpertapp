{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFecthGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAe9C,OACE,0BAAMC,SAVa,SAACC,GAEpBA,EAAEC,iBAEFJ,EAAWK,OAAOC,OAAS,EACvBR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKhB,2BACEO,KAAK,OACLC,MAAQT,EACRU,SAhBoB,SAACP,GAAOF,EAAcE,EAAEQ,OAAOF,Y,uBCP9CG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,gDAEiCC,UAAUH,GAF3C,sDAGFI,MAAOF,GAHL,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAOD,EAAIC,GACXC,MAAOF,EAAIE,MACXV,IAAG,UAAIQ,EAAIG,cAAR,aAAI,EAAYC,iBAAiBZ,QATnB,kBAadM,GAbc,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEvC,OACE,yBAAKc,UAAU,4DACb,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,2BAAKA,KCHEO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEhBd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAqB1C,OAdAC,qBAAU,WAERxB,EAASC,GACNwB,MAAM,SAAAC,GAELH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAKd,CAAEpB,IAEEqB,EDlB2BK,CAAc1B,GAAlCa,EAFyB,EAE/BN,KAAca,EAFiB,EAEjBA,QAEtB,OACE,oCACE,wBAAIJ,UAAU,qCAAd,IAAqDhB,GAEnDoB,GAAW,uBAAGJ,UAAU,oCAAb,WAEb,yBAAKA,UAAU,aACZH,EAAOJ,KAAK,SAAAC,GACX,OAAO,kBAAC,EAAD,eAAaiB,IAAMjB,EAAIC,IAAUD,UEZrCkB,EAAe,WAAO,IAAD,EAEI1C,mBAAS,CAAC,qBAFd,mBAEzB2C,EAFyB,KAEb5C,EAFa,KAIhC,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEI4C,EAAWpB,KAAI,SAACT,GAAD,OACb,kBAAC,EAAD,CAAS2B,IAAM3B,EAAWA,SAAWA,U,MCVjD8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.6e0db1e1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n  \r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {setInputValue(e.target.value)};\r\n\r\n  const handleSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    inputValue.trim().length > 2 \r\n      ? setCategories( cats => [ inputValue, ...cats ] ) \r\n      : setInputValue('');\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }> \r\n      <input \r\n        type='text'\r\n        value={ inputValue }\r\n        onChange={ handleInputChange }\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n}\r\n","export const getGifs = async( category ) => {\r\n\r\n  const url = `http://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&api_key=8d0PlfemXeGBt9FYN1Q7MNvtfqW7jYiw`;\r\n  const resp = await fetch( url );\r\n  const { data } = await resp.json();\r\n  const gifs = data.map( img => { \r\n    return {\r\n      id   : img.id, \r\n      title: img.title,\r\n      url  : img.images?.downsized_medium.url \r\n    }\r\n  });\r\n\r\n  return gifs; \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url}) => {\r\n  \r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn animate__delay-2s\">\r\n      <img src={ url } alt={ title } />\r\n      <p>{ title }</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFecthGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  \r\n  const { data: images, loading } = useFetchGifs( category );\r\n\r\n  return (\r\n    <>\r\n      <h3 className='animate__animated animate__fadeIn'> { category }</h3>\r\n\r\n      { loading && <p className='animate__animated animate__flash'>Loading</p>}\r\n\r\n      <div className=\"card-grid\">\r\n        {images.map( img => {\r\n          return <GifGridItem key={ img.id } { ...img }/>\r\n        })}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n  \r\n    getGifs( category )\r\n      .then( imgs => {\r\n        \r\n        setState({\r\n          data: imgs,\r\n          loading: false,\r\n        })\r\n        \r\n      })\r\n\r\n  }, [ category ])\r\n\r\n  return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n  \r\n  const [categories, setCategories] = useState(['Strawberry quest']);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories}/>\r\n      <hr></hr>\r\n\r\n      <ol>\r\n        { \r\n          categories.map((category) => \r\n            <GifGrid key={ category } category={ category } />) \r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}